{"version":3,"sources":["pound-calculator/models/BarInput.ts","pound-calculator/stores/BarStore.ts","pound-calculator/dependencies.ts","pound-calculator/components/PoundBar.tsx"],"names":["BarInput","Object","classCallCheck","this","weight","BarStore","injectable","_dec","_class2","initializerDefineProperty","_descriptor","_descriptor2","createClass","key","value","_compute","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","console","log","barConfiguration","stop","apply","arguments","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","object","action","getOwnPropertyDescriptor","_class","container","bind","toSelf","inSingletonScope","PoundBar","PoundBar_dec","resolve","observer","PoundBar_class2","_React$Component","_getPrototypeOf2","_this","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","PoundBar_descriptor","assertThisInitialized","inherits","event","barStore","target","compute","_this2","react","className","Grid","alignItems","spacing","item","xs","sm","TextField","id","label","type","defaultValue","onChange","onChangeWeight","InputProps","endAdornment","InputAdornment","position","Button","onClick","onCompute","Icon","React","PoundBar_class"],"mappings":"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","file":"static/js/4.94de76e4.chunk.js","sourcesContent":["export class BarInput {\r\n    weight: number;\r\n}","import { observable, action } from 'mobx';\r\nimport { injectable } from 'inversify';\r\nimport { BarInput } from '../models/BarInput';\r\n\r\nexport interface IBarStore {\r\n  barConfiguration: BarInput\r\n  compute(): Promise<void>\r\n}\r\n\r\n@injectable()\r\nexport class BarStore implements IBarStore {\r\n  @observable\r\n  public barConfiguration: BarInput = observable.object(new BarInput());\r\n\r\n  @observable\r\n  public barLoad: number[] = observable.object([]);\r\n\r\n  @action\r\n  public async compute(): Promise<void> {\r\n    console.log(this.barConfiguration.weight);\r\n  }\r\n}\r\n","import { container } from '../ioc';\r\nimport { BarStore, IBarStore } from './stores/BarStore';\r\n\r\ncontainer.bind<IBarStore>(BarStore).toSelf().inSingletonScope();\r\n","import * as React from 'react';\r\nimport '../dependencies';\r\nimport './PoundBar.scss';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { TextField, InputAdornment, Icon } from '@material-ui/core';\r\nimport { Button } from 'react-bootstrap';\r\nimport { BarStore, IBarStore } from '../stores/BarStore';\r\nimport { resolve } from 'inversify-react';\r\nimport { observer } from 'mobx-react';\r\n\r\n@observer\r\nexport class PoundBar extends React.Component {\r\n  @resolve(BarStore)\r\n  private barStore: IBarStore;\r\n\r\n  public onChangeWeight(event): void {\r\n    this.barStore.barConfiguration.weight = event.target.value;\r\n  }\r\n\r\n  public onCompute(): void {\r\n    this.barStore.compute();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pound-bar\">\r\n        <Grid container alignItems=\"center\" spacing={3}>\r\n          <Grid item xs={12} sm={9}>\r\n            <TextField\r\n              id='weight'\r\n              label='Weight'\r\n              type='number'\r\n              defaultValue={0}\r\n              value={this.barStore.barConfiguration.weight}\r\n              onChange={event => this.onChangeWeight(event)}\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position='end'>LBS</InputAdornment>,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Button onClick={() => this.onCompute()}><Icon>touch_app</Icon></Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container alignItems=\"center\" spacing={1}>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PoundBar;\r\n"],"sourceRoot":""}